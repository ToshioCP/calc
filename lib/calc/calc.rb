#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.2
# from Racc grammar file "".
#

require 'racc/parser.rb'


require 'strscan'
include Math

class Calc < Racc::Parser

module_eval(<<'...end calc.y/module_eval...', 'calc.y', 45)
 
def initialize
  @table = {}
end

def run(s)
  @tokens = []
  lex(s)
  do_parse
end

def lex(s)
  ss = StringScanner.new(s)
  until ss.eos?
    if ss.scan(/sqrt|sin|cos|tan|asin|acos|atan|exp|log|sqrt|PI|E|v/)
      @tokens << [ss[0].to_sym, ss[0]]
    elsif ss.scan(/[[:alpha:]]+/)
      @tokens << [:ID, ss[0]]
    elsif ss.scan(/[[:digit:]]+(\.[[:digit:]]*)?/)
      @tokens << [:NUM, ss[0].to_f]
    elsif ss.scan(/\*\*/)
      @tokens << [ss[0],ss[0]]
    elsif ss.scan(/[+\-*\/()=;]/)
      @tokens << [ss[0],ss[0]]
    elsif ss.scan(/\s+/)
      # ignore spaces
    else
      raise "Unexpected character."
    end
  end
  @tokens << [false, nil] # end mark
end

def next_token
  @tokens.shift
end

...end calc.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    24,    25,    22,    23,    24,    25,    22,    23,    24,    25,
    22,    23,    24,    25,    22,    23,    24,    25,    22,    23,
    21,    48,    26,    29,    31,    59,    32,    33,    34,    60,
    35,    36,    37,    61,    38,    39,    40,    62,    24,    25,
    22,    23,    24,    25,    22,    23,    24,    25,    22,    23,
    24,    25,    22,    23,    24,    25,    22,    23,    41,    63,
    29,    29,    29,    64,    29,    29,    29,    65,   nil,   nil,
   nil,    66,   nil,   nil,   nil,    67,    24,    25,    22,    23,
   nil,     4,     3,     7,     8,     9,    10,    11,    12,    13,
    14,    15,    16,    17,    18,    19,    20,    68,     6,     4,
    28,     7,     8,     9,    10,    11,    12,    13,    14,    15,
    16,    17,    18,    19,    20,   nil,     6,     4,    28,     7,
     8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
    18,    19,    20,   nil,     6,     4,    28,     7,     8,     9,
    10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
    20,   nil,     6,     4,    28,     7,     8,     9,    10,    11,
    12,    13,    14,    15,    16,    17,    18,    19,    20,   nil,
     6,     4,    28,     7,     8,     9,    10,    11,    12,    13,
    14,    15,    16,    17,    18,    19,    20,   nil,     6,     4,
    28,     7,     8,     9,    10,    11,    12,    13,    14,    15,
    16,    17,    18,    19,    20,   nil,     6,     4,    28,     7,
     8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
    18,    19,    20,   nil,     6,     4,    28,     7,     8,     9,
    10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
    20,   nil,     6,     4,    28,     7,     8,     9,    10,    11,
    12,    13,    14,    15,    16,    17,    18,    19,    20,   nil,
     6,     4,    28,     7,     8,     9,    10,    11,    12,    13,
    14,    15,    16,    17,    18,    19,    20,   nil,     6,     4,
    28,     7,     8,     9,    10,    11,    12,    13,    14,    15,
    16,    17,    18,    19,    20,   nil,     6,     4,    28,     7,
     8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
    18,    19,    20,   nil,     6,    28,     7,     8,     9,    10,
    11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
   nil,     6,    28,     7,     8,     9,    10,    11,    12,    13,
    14,    15,    16,    17,    18,    19,    20,   nil,     6,    28,
     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
    17,    18,    19,    20,   nil,     6,    28,     7,     8,     9,
    10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
    20,   nil,     6,    28,     7,     8,     9,    10,    11,    12,
    13,    14,    15,    16,    17,    18,    19,    20,   nil,     6,
    28,     7,     8,     9,    10,    11,    12,    13,    14,    15,
    16,    17,    18,    19,    20,   nil,     6,    24,    25,    22,
    23,    24,    25,    22,    23 ]

racc_action_check = [
    30,    30,    30,    30,    49,    49,    49,    49,    50,    50,
    50,    50,    51,    51,    51,    51,    52,    52,    52,    52,
     1,    30,     3,     5,    10,    49,    11,    12,    13,    50,
    14,    15,    16,    51,    17,    18,    19,    52,    53,    53,
    53,    53,    54,    54,    54,    54,    55,    55,    55,    55,
    56,    56,    56,    56,    57,    57,    57,    57,    21,    53,
    27,    42,    43,    54,    44,    45,    47,    55,   nil,   nil,
   nil,    56,   nil,   nil,   nil,    57,    58,    58,    58,    58,
   nil,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    58,     0,     6,
     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,
     6,     6,     6,     6,     6,   nil,     6,    26,    26,    26,
    26,    26,    26,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    26,   nil,    26,    31,    31,    31,    31,    31,
    31,    31,    31,    31,    31,    31,    31,    31,    31,    31,
    31,   nil,    31,    32,    32,    32,    32,    32,    32,    32,
    32,    32,    32,    32,    32,    32,    32,    32,    32,   nil,
    32,    33,    33,    33,    33,    33,    33,    33,    33,    33,
    33,    33,    33,    33,    33,    33,    33,   nil,    33,    34,
    34,    34,    34,    34,    34,    34,    34,    34,    34,    34,
    34,    34,    34,    34,    34,   nil,    34,    35,    35,    35,
    35,    35,    35,    35,    35,    35,    35,    35,    35,    35,
    35,    35,    35,   nil,    35,    36,    36,    36,    36,    36,
    36,    36,    36,    36,    36,    36,    36,    36,    36,    36,
    36,   nil,    36,    37,    37,    37,    37,    37,    37,    37,
    37,    37,    37,    37,    37,    37,    37,    37,    37,   nil,
    37,    38,    38,    38,    38,    38,    38,    38,    38,    38,
    38,    38,    38,    38,    38,    38,    38,   nil,    38,    39,
    39,    39,    39,    39,    39,    39,    39,    39,    39,    39,
    39,    39,    39,    39,    39,   nil,    39,    40,    40,    40,
    40,    40,    40,    40,    40,    40,    40,    40,    40,    40,
    40,    40,    40,   nil,    40,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
   nil,     4,    22,    22,    22,    22,    22,    22,    22,    22,
    22,    22,    22,    22,    22,    22,    22,   nil,    22,    23,
    23,    23,    23,    23,    23,    23,    23,    23,    23,    23,
    23,    23,    23,    23,   nil,    23,    24,    24,    24,    24,
    24,    24,    24,    24,    24,    24,    24,    24,    24,    24,
    24,   nil,    24,    25,    25,    25,    25,    25,    25,    25,
    25,    25,    25,    25,    25,    25,    25,    25,   nil,    25,
    29,    29,    29,    29,    29,    29,    29,    29,    29,    29,
    29,    29,    29,    29,    29,   nil,    29,     2,     2,     2,
     2,    46,    46,    46,    46 ]

racc_action_pointer = [
    74,    20,   413,    -1,   307,    21,    92,   nil,   nil,   nil,
     0,     2,     3,     4,     6,     7,     8,    10,    11,    12,
   nil,    58,   324,   341,   358,   375,   110,    58,   nil,   392,
    -4,   128,   146,   164,   182,   200,   218,   236,   254,   272,
   290,   nil,    59,    60,    62,    63,   417,    64,   nil,     0,
     4,     8,    12,    34,    38,    42,    46,    50,    72,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -26,   -26,    -1,   -11,   -26,    -8,   -26,   -12,   -13,   -14,
   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,
   -25,   -26,   -26,   -26,   -26,   -26,   -26,    -7,   -11,   -26,
   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,
   -26,    69,    -3,    -4,    -5,    -6,    -2,    -9,   -10,   -26,
   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -15,
   -16,   -17,   -18,   -19,   -20,   -21,   -22,   -23,   -24 ]

racc_goto_table = [
     2,     1,    27,   nil,   nil,   nil,    30,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    42,    43,    44,    45,   nil,   nil,    46,    47,   nil,   nil,
   nil,    49,    50,    51,    52,    53,    54,    55,    56,    57,
    58 ]

racc_goto_check = [
     2,     1,     3,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,     3,     3,     3,   nil,   nil,     2,     3,   nil,   nil,
   nil,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2 ]

racc_goto_pointer = [
   nil,     1,     0,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,     5 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 27, :_reduce_1,
  3, 27, :_reduce_2,
  3, 28, :_reduce_3,
  3, 28, :_reduce_4,
  3, 28, :_reduce_5,
  3, 28, :_reduce_6,
  2, 28, :_reduce_7,
  1, 28, :_reduce_none,
  3, 29, :_reduce_9,
  3, 29, :_reduce_10,
  1, 29, :_reduce_11,
  1, 29, :_reduce_none,
  1, 29, :_reduce_13,
  1, 29, :_reduce_14,
  4, 29, :_reduce_15,
  4, 29, :_reduce_16,
  4, 29, :_reduce_17,
  4, 29, :_reduce_18,
  4, 29, :_reduce_19,
  4, 29, :_reduce_20,
  4, 29, :_reduce_21,
  4, 29, :_reduce_22,
  4, 29, :_reduce_23,
  4, 29, :_reduce_24,
  1, 29, :_reduce_25 ]

racc_reduce_n = 26

racc_shift_n = 69

racc_token_table = {
  false => 0,
  :error => 1,
  "**" => 2,
  :UMINUS => 3,
  "*" => 4,
  "/" => 5,
  "+" => 6,
  "-" => 7,
  :ID => 8,
  :NUM => 9,
  :PI => 10,
  :E => 11,
  :sqrt => 12,
  :sin => 13,
  :cos => 14,
  :tan => 15,
  :asin => 16,
  :acos => 17,
  :atan => 18,
  :exp => 19,
  :log => 20,
  :log10 => 21,
  :v => 22,
  "=" => 23,
  "(" => 24,
  ")" => 25 }

racc_nt_base = 26

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"**\"",
  "UMINUS",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "ID",
  "NUM",
  "PI",
  "E",
  "sqrt",
  "sin",
  "cos",
  "tan",
  "asin",
  "acos",
  "atan",
  "exp",
  "log",
  "log10",
  "v",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "$start",
  "statement",
  "expression",
  "primary" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'calc.y', 11)
  def _reduce_1(val, _values)
     @v = val[0]
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 12)
  def _reduce_2(val, _values)
     @v = @table[val[0]] = val[2]
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 13)
  def _reduce_3(val, _values)
     val[0] + val[2]
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 14)
  def _reduce_4(val, _values)
     val[0] - val[2]
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 15)
  def _reduce_5(val, _values)
     val[0] * val[2]
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 16)
  def _reduce_6(val, _values)
     if (val[2] != 0.0) then val[0] / val[2] else raise("Division by zero.") end
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 17)
  def _reduce_7(val, _values)
     -(val[1])
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'calc.y', 19)
  def _reduce_9(val, _values)
     val [0] ** val[1]
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 20)
  def _reduce_10(val, _values)
     val[1]
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 21)
  def _reduce_11(val, _values)
    if @table[val[0]] then @table[val[0]] else raise("#{val[0]} not found.") end
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'calc.y', 23)
  def _reduce_13(val, _values)
     Math::PI
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 24)
  def _reduce_14(val, _values)
     Math::E
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 25)
  def _reduce_15(val, _values)
     sqrt(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 26)
  def _reduce_16(val, _values)
     sin(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 27)
  def _reduce_17(val, _values)
     cos(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 28)
  def _reduce_18(val, _values)
     tan(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 29)
  def _reduce_19(val, _values)
     asin(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 30)
  def _reduce_20(val, _values)
     acos(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 31)
  def _reduce_21(val, _values)
     atan(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 32)
  def _reduce_22(val, _values)
     exp(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 33)
  def _reduce_23(val, _values)
     log(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 34)
  def _reduce_24(val, _values)
     log10(val[2] )
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 35)
  def _reduce_25(val, _values)
     @v
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Calc

#
